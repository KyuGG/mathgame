<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE8AAAAxCAYAAACbHPQ3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABM1JREFUaEPtmlkofV8Ux6WE8KSUIeVV5I1CmVLKiyFFSFJSxuKBJJEMZXxAZokS
        UmbJmKmQIWNkKGMiMxnXv7Xv5nfvca6/v33P717/9qdWztr73OPe79l77X3WOlrA+TFcPAa4eAxw8Rjg
        4jHAxWOAi8cAF48BScSbnZ0FT09PMDQ0BEdHR5iamqI9Mh4eHqC8vByCg4Npi+aQlpYGWlpaCmZkZASv
        r6/0jD+oXLyLiwtITk6Gp6cnWFtbg/DwcCLi2dkZPQNgbGwMAgMDwcnJibZoBs/PzxAbGwtbW1swMjJC
        LDc3F8LCwugZiqhcvNHRUQWhcJRpa2vD0NAQbZFRXFysceLd3t7C/f099WRER0dDZ2cn9RSRPObh3TQw
        MIDj42PaIkMTxRPy9vYGVlZW8Pj4SFsUkVy8jo4OcveE/Abx3sOLMiQV7+XlBYKCgsh0EPIbxIuJiYHW
        1lbqfUZS8YqKiuD09JR6imi6eDhlLS0tP8VAeSQTr6amBo6OjqgnW4Xll3tNF298fBx8fX2pJ44k4uGI
        Cw0NhfT0dGIlJSWQmJhIe2VkZmaCg4MD9TSPuLg4aGxspJ44KhcPN8iurq7g4uKiYPKxAxeRgIAA8PDw
        gPb2dri6uqI9mkNISAhcX19TTxxJY97/HS4eA1y8n7LfxMVjgYvHgKh4Jycn5GH4txh+XyEtLS1fGn5O
        iPC6QhOiVLylpaVfY2Lizc3NfWmLi4v0zD+IXVvehPBpy8CvEu/u7g7y8/PJY1N3dzdtVRPfWW0xI4JD
        XCwN/bcpKCiArq4uuLm5AXt7e5ienqY96uFL8aqqqkidAVPT1tbWcHh4SHvUw/r6Oj0CyM7OJt9PnSgV
        b2Vlhdzld7AWgSJqCph4wEyNOlEqnvChGKtKGG80gYmJCYUbqy6+tWBg6RCzIJgZlgdz+1hC7Onpgbq6
        OkhKSqI97Gxvb5OcX19fH0lr4f9A9vf3YXJykhxLyfDwMNTW1kJ/fz8Z5WLboX8Vr6GhAZydnUkFLCcn
        h7YCHBwcgJeX18dFsTyHOTpVgKMKr4fZXERfXx82NjZgd3cX/P39iZgZGRnEpCAlJQUqKyvJMS5KFhYW
        5FjIt0Ye0tTUBDo6OqQei/j4+Cjk6GxtbT+tfnt7e6K7e3kTblaxbInp7/ewsbm5+fHlm5ubPxKsaAMD
        A6RdlfT29oK7uzv1AMrKyki8F+Pb4uGUxRGAIw6njYmJycf2BWOQrq4uKTPKgzVbsd29vJ2fn9OzZcTH
        x0NUVBT1ZBldTEz+LXBX0dbWRo5x5NvY2EB9fT3xhXxbPMTMzIz8xR/0/qoECoiZYny9QhWYmpqSTDOC
        bxwYGxt/TCGpWV1dJa9X4E1HcCukp6cHOzs7xBeiVLz5+XkoLCwkG1IE8/nvK1xCQgIZ2ljIxtpEZGQk
        acvKyiL9LJibm5OFYmFhgZT+7OzsoKKiQpIpKgTjKoq3vLxMQgr+Hpxh1dXVZMYJUSoeLgQoDAZuLODM
        zMzQHiBVsYiICPDz8yMXxX6sz15eXtIzfg6uct7e3pCamkpCBT6K5eXl0V7pKS0tBTc3NzJ1ccTh8eDg
        IO1V5D9NW44iXDwGuHgMcPEY4OIxwMVjgIvHABePAS4eA1w8Brh4PwbgHz+Ea60pYi31AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>