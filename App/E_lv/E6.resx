<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALoAAACjCAYAAAA91wSiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABu6SURBVHhe7Z0FlFVlF4ZnLddvdzcGiomJYGCC3d3ditjdhZio2Iq5TFBQFBU7F20OoqKgooDd
        7ffPs5n3uudwZxice4d75+5nrTOnz7lzzvvts7/9VVWq4aeffmKWfvvtt9zy33//bfN//vkn/fXXX7YM
        P//8c+1S3eUgKDZeh1r2237//ffapZT+/PNP0y5zqGLl119/tRXPL7/8YnMuxH6dAOwjUQRBc4EO//jj
        j9q1f0G/frvXsow1mEXnYPCCzoqfdV2QC+S7aRAUA/SJ5pgzIXppVmDNZYCZpE/Nq1iQcL14OYl1L/is
        JZfVD4JigTa9ZfZGVmL/4YcfUu/evdNZZ52Vzj777HTMMcek0047LT399NPppZdesuOqvI8jPvnkk3Tf
        ffel448/PnXp0iWdeeaZ6corr0zdu3e35dtvvz2NGTOm9uggKB6I1As964e//fbbJvDNN988HXrooaln
        z56pR48e6aCDDkprr712Ouecc9KPP/44yXUB77J8+OGHqVevXqljx46pqqrKTjjhhBPShRdeaBdg+8kn
        n5y++OILOycIiom0qfyiePfdd9OWW26ZFlpoITPK3333Xe2elF599dW0/PLLm/ix+JYZ5VOQdUNIBXwG
        5pxzTrPu+lx88803accdd0zzzTdfuvrqq21bEBQTaQ+hS/TV1dWpa9euZoi32267nNH9+uuv04QJE8xY
        X3DBBWac+SLkLLpQyPDTTz9Nu+66a1p88cXTRx99ZNuUGA444AC7AZ+IICg2ErrAOOM+zzTTTKbPhx9+
        2Lb5cPf48eNT3759U58+fWzdhE4q8Qdh6ocMGZLatWtn1nvkyJG1eyZ9EtZff/200UYbpVdeeWWyjAKJ
        Qdv8viBoCO97E/BAk9IP3oX49ttvzXrvtddeabrppksbbriheRkeLD/HvP/++3Yu1zPXRXBh+UDkVmeZ
        ZRbzcbgQAr7iiivM6d9nn33SM888Y8cBP1KflCxcP6aY6pvQHFN9hY/yyzlW64MGDUqrrbZamnXWWXPu
        M/pE1N76cw7rXN8sunfiv//+ezsBUf/vf/9L6667rgm7c+fOacUVVzR/iFAONxQ+NeriCJ9SVv1DMcWU
        bwJZbkBXWO2vvvoqpyPwhnTAgAFpkUUWSYsttli6//7764iba2GYfaYVTOikJn8woUNcliWXXDINHDgw
        jR071pz8YcOGpUMOOcRucPrpp9ux+rFCKSgIGgNaQdhTQpYd8DbWWGONNP/886fHHnvMtmV1iMHGZdH2
        Kh9tUT0X/PM2bdqktdZay6w1B+O3Y+nvueceEzohR26oBMIxOpZt3IhzgmBKoBME/+WXX+b8c/DGF9AU
        xxFRwaUmIHLjjTfW7p2UARUPPfRQOuOMMyxxcL2qfGIknLjEEkvYgUIp4+WXX7Z9rVu3To888kjux3g/
        /fHHH0/7779/2mmnndKmm24aU0z1TrjGzPfee++0xRZb2JywoAwwupOuZKHZJ43uueeedYIl6Llfv37p
        yCOPTN26dTNvBW1OFl7kwMMOOywtu+yydjFZaaaJEyem4447zlLSVlttZTlb+eoSPCnuxBNPTDPOOKP5
        9DvvvHNMMdU7bbvttunAAw9M22yzTZptttlMWyuttJLFwoWE7l1itEdGlMJLrPsNN9xgRf7nn39+LrGg
        Sc7lvCr+kFJwS3Dyzz333DTHHHOkGWaYwS5wyy23pOuvv95i5lh4MqV77LFHev311+2GErrcHjjllFPS
        xhtvnF544QXLVMQUU30TrsVnn32WLrroIouJE+lr3769iVNeBMaWdUVmvFHt37+/FQpRuInw0Sh+++ef
        f27HCKvUBfhHDz74YDrqqKPSLrvsYoVCxx57rFWOoX7LSSedZAK+8847c/VcfOQFZPk5jqJZ3JygsvHR
        D3kHAv1gIKlDReADzWChO3TokHNdGgNeCPWzKOTEYAsSgqjjunBjbuB/jId9+ozkI4Qe1AdegwwjGsE6
        s44lX2GFFawQ8vnnn7c6VAg9a0QbguuRoJi8uD1VpAAdxI/xkFIUk5SI+QGIXe6OR8eE0AOB8Lxo5eKS
        37v88svTwgsvbFp58sknbTth61VXXXWy86aGfGKfLDOahZsh3sYQQg+y+BJPCZdtFEjOPffcaZNNNrHy
        GUCg5AtXWWWVRrsu2cTANZQJ9brN+ejAcn3uiQTPnGOw8tmbhNCD+qDAUcIjItKqVSurpzJ06FDbBhxD
        ownKaPDnC0m9Fp0fpcwDbgqTfmh9sJ8phB545OJiSAlqUPV7++23T4MHD7btcp8Bi05BJfhI3pTA6OZz
        WUSV/O3GpCAuJDFznv8sQQg9yIK2KOInv0eYet5557XQMy2DhNfefvvtl1ZeeWVbzuYB6wNdIvR8HoaY
        rCkd69598ftJkd7VyRJCD7JIxBTkUBiELmg0AbLioMqEZEbbtm1rMfbGkM+KS4d1hF47Lwgh9MojaygB
        IykR434g8tlnnz116tQpVwaDP+7hHBIF5Tirr766XdcLtamE0IMmoS88wsRNEYgWsWOhadOJT44lx3Iz
        ZQmhB2UDQpdfTV0VGtST8dxhhx2spqvQV8C7HSH0oCzwwqQ6CXWmaAFEjcQPPvjAtnu/mwTh83sh9KCk
        QaAgd4RI3NFHH20lnrTrROQ+ekKgI18GMoQelDwKM2OxESotfxC5Sjx9CyL89mxYGkLoQclDjJyqtlSX
        XXDBBa0xBK2AsOT1iRVR62sAIfSgpMFCI0rqgdOGgVZlipN7ELIXLud4QujBNMVbXTKPWf8aS04IkegK
        75w64ZCNk0+JEHowTVFsnPfqRY4lZzriiCOsWB93hVY9CFR1VPJlOusjhB5McxCgUEhw9OjR1rEnfXDu
        vvvu1qmQ8AVHjSWEHpQE3jpTjM87Jk5O/5xqn0khkcQ5NTUPIYQeTFMkNkKCiA8xH3744da3DzUNyXj6
        ODkJQudwfGMJoQfTHAnu448/Tvvuu6/VXaHeuKraUhKqYxCr4uThowdlBX1z0nU4XUoQJ6eHiHHjxtXx
        xRE1AseHR6QId2oIoQfTFMSrJm70uYLI1V8+IEgmROqFybapIYQeFBVveX0lK0BsxMXp3o2GzPjk6kHL
        98BcCELoQbOAyL0rQuUrMplYcNwV4uVYdo7RccTRC0UIPSg63s2QeN977z0THZacKAvrQl+BQgoxhB4U
        FS9yMWrUKPPJGQgCi67ahxoQC/xyIQihB0VFMXBZafowZIQTQogMtckgENmSTt4xrk0hCaEHRUeCop9x
        mr3RmzIZUFXQohquMqpe9Pnqlf9XQuhB0aF/TUo46VwIn5z+yikEyoL19+LOWvqmEEIPigqZT/ztgw8+
        2MbtRGgSuUo2NaSKQOD5fPumEEIPmgwCkmhwQeSPs42WQBTrU0GLYn21/Sx0nHxKhNCDJoGAZI0Rj0TO
        nKq2VLGljWeXLl3MF+dYHVPoDGdDhNCDJuNLPGWxCSHS7I2MJ/XKlfH04kJ4zUUIPWgyCMiLfcSIEVbS
        KZ8cUQGhRZEvM1pMQuhBk5AbQkMIlqmQxWDJCyywgA2jQhcVOkaQ2ZzahhNNJYQeNAkfAqSfFYY7xCfv
        2rVrroIWdVi8xZdPH65LPYTQSxMyle+8847VWaGCFqMNYsl9xhMQmhd3CL0eQuilCXFyerOlf3K6piC6
        Ir8cvNVHcIUsCGosIfSgQfJZXbZJrPjkDEE+11xz2XixvjJWIYXUVELowRShdqFE4TsOGj58uA09zojM
        WHL54YqPh9D/IyH0aQtCVpz8zTffNJETJz/vvPOsPotAVKUkcgihBw2Sr5XPa6+9Zv2tUEGLkZllwceP
        H59zaRBWKRFCDxoEQWDJJQrclc033zwts8wy1vEnUOMQEZUyIfSg0bzyyism8kUXXdS6plChD+/ER1IQ
        UXMXCE2JEHrQKHjWhBDbtGmTzjnnHHNTwBfl+6FVvM9eCoTQgwZBHLQMQuTUXSG6Ip9cfjjWW6WdvB8t
        a38pEEKvcPJlNvHJEQXQOr9jx47WP3n37t2tMAgk5nIhhB7kQobg4+QMabjBBhtYxpPoirqEk8gL2aaz
        2ITQA3vpgBiUiaQ/8vXXX99CiMTJfQLgK6BzyoUQemDIVYGnnnrKoiuMNNGjR4+cu0IGE4Fg0X1XzuVA
        CD0wAaj4/tVXX825K926dTNRy1VhruPAJ45SJ4Re4XgXpG/fvmnNNddMSy+9dLrqqqvqxMa9wKGc/HMI
        oVc4ssovvvhi6ty5s4n88ssvz/nqmiN0LSMaDbdSLoTQA3uO6667rlW1vfrqq00UIItO5lOi8O5KvtBk
        qRJCrwB4qdmuJRAxz5IKWquuumpaYokl0p133mn9rcid0bwlEEKvAHyExBfNE0JcbbXV0hprrJEuvvji
        XHE+ouA5KxPaEgihVwByNxCuMpE8u/XWWy+1atXKRO4Ljbx70lIIoVcAvGTFwqF///5pk002MZ8cd8VX
        xspGV1oKIfQWDi/YuyADBw5Mbdu2tejKLbfcUidMqKgKIIrw0RtPCH0a40VOnJyMJ4PVEl3xYMklbETh
        Rd8SCKFXALxgRE4txBVWWCHdcMMNdQqDshA25JyWRAi9hcMLfu6559I666xjw6nceuuttXsmIYvPPOuq
        ZEOS5UwIvcyRUHkuXqi8WNZfeOGFtOyyy1rztwcffLDO8RxTKYTQWwA+ouKXseQUBBFGvPnmmy2GzgtX
        ZKWQL7rUCaG3ACgQkk/NC+UZPfnkk6ldu3ZpqaWWStdcc03OJ/dWv6WGEvMRQi9zeB4I1vvT9957r9Vd
        oetmYuaKk/sIDChxVAIh9DInGwYkurL88sun5ZZbLt19992TxcaBZ1huDSeaSgi9zPEv66677korrbRS
        WnHFFVOvXr1smy8Q8suVZM0hhN4CwGpjvfHJKRC65557zE3h5QrWseKFfLnlRAi9zOHl4Yfz8ujVFpEL
        XiYvOPtC2c5USYTQywQvWKwzmU8yoY8++mhacsklbXrsscdsvyjkiyx3QuglDi/EF9f7gWh79+5tAqcm
        IpYc8ZMIGirer1RC6GUAL0mo+dqAAQOsxJPMpy/W52XqBVaae9IQIfQygBfkw4GUcq611lpW1ZaCIUak
        AF6mYuU8Jy0HIfSSJytY3BVaBRErp6MhX+TvSz8rLU4+JULoJY5vaU9DCQROG8/777/ftvn93jfnpQb/
        EkIvcXhBtOekyRsCp4Ohfv362b6smLOdChXyRZY7IfQyAOvdunVr6yZOIURelOa4NnppzHmp2h9MIoRe
        AvASBKWcegG8GEo855lnnrTyyivb0CreX/f+edAwIfQSwPvWcj/wvW+77TZrFbTFFlukPn365FwVzYPG
        E0IvERC2Mpb8j4QQaRWEJc+WeEK4JlNHCL0E4H/yJZ70SU50hcIgRp0Q3lWppEYThSCEXgLIR+d/u/HG
        G9PCCy+cOnToYO09Pb4wKCz61BFCLxEQMU3eyHiuvfba6fnnn88JWwkB/MsJq954QuglAE3dbrrpJutB
        izrllHiCd1X4v73gwUdggoYJoU9j8M2Jk1NvhZZB9HALqr8iq82LkbvCtlIbsLbUCaE3AzxgkW3aRq9Z
        DIqFuzJ06FA7VuFGf17QNELozYCPk6uxMpWuCCHSUn/rrbe2VkJ68C2ph6xSIYTejMj1wJL37NkzLbLI
        IlbdlrrlWXRsUBhC6EVGD1MuC+sMNU6jCRoyyycHH0vnxQSFI4TeDHif+9prr7VifToYYvwgQQSFTCZz
        TUHhCKE3E/jkl156qQ05ztDjDFwLiNvXKWe9kC8gmEQIvcjwexmTk4736Zu8ffv2VhgEftwgLHjWXQnB
        F44QepGZOHGiVbWlV1sqaA0fPty2Kw7OwwcevNwVlr/++mtbDgpDCL2J6GHpQWqdB0kokVGY55tvPnNX
        EDnbhUQeFJ8QegH47LPPapdSbqxO/O4rrrjCKmjtuOOO6emnn7btoMxpZDibjxB6gfCZSNyVCy+80OLk
        G2+8sXXIn8VnQIPiE0JvIrLOZCx5mIDI559/fivWf+utt2wb+C6cQ+jNSwi9AKigB9GfddZZOXeFNp6A
        i4LFFzx0vx4UnxB6gaBK7XnnnZdmmmmmtNlmm6Xq6mrbzgP11pvfL988fPTmI4TeRCjapz75BRdcYAPV
        UkFLxfo8TA8P2iNXJyg+IfQmQolnt27d0hxzzJE22GCD9OGHH9p2xcF9hMVX0fX+elB8QuhTwFeZ9Q8G
        4dI4AneFqrbbbLNN+uCDD+wByv8O16R0CKE3gvHjx9cu/RsnJwEgcjKeu+22W53W+t5yB6VBCL2R6EEB
        dVfwyRH5tttum6ug5YmoSmkRQp8CqniFr82Eb839qWq71VZbpY8++sj2g2/MrEQRlAYh9EYgseOSnHTS
        SdYlBe6KQojAgxM8UGVCg9IghN5Ixo0bl04//fQ0++yzp+233z69//77th1B+zg5GVBZcy/+YNoSQp8C
        CBeRc0/qruy66665Yv1sI+assEPopUMIfQog8jPPPDPNNttsadNNN02ffPKJbdf4+t56R12W0iWEXoMi
        JDwMP/bPqFGj7MEQJ99zzz1N5Fh4WeoYJ6h8CKHX4Hu9Uiby448/TqeeempacMEF03777WedCwEPK+Lk
        5UfFC50HALgaEjnF+EcccYT1T45P/sYbb9h27i3rX8iHFBSfihe63BCJHJ+ch0FfiFS1xbIL346T43Vu
        UPqE61LDhAkTbE68/IADDrA2nl27drW6K8A9eUh6MMz5AkRdlvIhhF4LJZyHHHKIdfi577775kTOA5G1
        B+4vgRfyQQXFpeKFTkaUNp7HHntsmmuuudKhhx5qos8KHPDPQ9zFoybDXz1s2LCRY8eOHad1TVrPN6/J
        U4394osvJvz4448/VVdXj9Y+TawPGjSo+vXXX6+uyXNVI/TBgwezbyTH/5IpEOEc/zuErpWPshA6qXzW
        WWdNe+yxR65Fv+Lgvsqtnge/wXc+FBQGhFRjXH4bPnz4SK3bjlq0np3XWOrf33jjjVE1X+ExNW6oVS/N
        novQ81n0b7/99ruRI0da4hCc638H13zzzTdHsZ257uEpCaF7y+xDg2Q0DzroILPk1F359NNPa/dMIgp9
        mheE9F8sOmDRObfGRbEwms7TMfmEPmTIENsvQQu2+d8xYsSI936qge01+vmZdTvQURJC94KVJUbUuClU
        tT3wwANzPWjxnLJF+0HzIFGK+tazc0Dgo0ePnlRsXUP23Km16LWLxvjx4yd6i8567a4c01zoHA+IV24I
        tQ6JrtAlBRnPmn/UtkOtQbAHETQvWYGxrim77rcDVvaHH37IFVVnj8kKPZ+PrmM1z1LfdigJoeNfy33B
        B8cXpz75/vvvX8ddUf0V4KEokQTlDwYsn0UvFCXhushdqfHj0i677GLuyhlnnJHGjBlj2/mnSdSy5iQM
        HkrQcqgIoQNVa/faay+z5IQSET1I5IIH4gUftAxavNARMY0k8MWpoEXjCYr58dezQs66KyH0lkOLFzoZ
        TypoYcnJgNKwGZQxlTXnH/dhSN/+Myh/ii50X7Di/WBCfnQRQWt6DR4L/Bg/9+QTuq4HLGudf2T06NFW
        +5D65IhcfSQSS/fnBS0f3nd9QveFg77iXvaLjpa1jWWfUMyi50s5gwcPNrHiN+Mv6xhfEpmFY5i80LHC
        /GhgrlY+77zzjsXH6UGLeuVjx4617eGOVCb1CR095DN6GEPpzbccA+nNY0KnmF0CBsJ4F110UZp++ult
        CEIf4uPC/liPbuyFrpuSKvUVoPBn5513tjj5wQcfbJYdvMij1LOyaMiig3SEpe7Tp0868cQTLQyNfg47
        7DCbH3fccen6669P7703qWDUl7JX6WISL6njvvvus2qwG220kXXM6et8g3zlrPXNJ3Qdox9KhSyJnOJ9
        36Wzb0nkx/QMWj4NWXSQkaR55OOPP276nGWWWWwUQQIYjF5y/PHHW1URRJ8d3KFKF9AFH330UUsZd9xx
        Rzr77LMtEjKotvdZJQZ9SiRekU/oHKOMI208GWGCa+L7+86FgN/ir1nflyNoeTRk0dGmdCp9DBs2LLVt
        29aErW4I0cvDDz+cWrdunTp16lRnSJ+c0DkIP5kW9QwqywURO5a3V69eJlYfAclHPqEL4uS0CJp55pnt
        s6PPCvf1Phb3kMBD6JVDQ0KXYQV5Ey+++KI1wLnkkkvq7EczhKppt4CVF7nwIpEVXJaLL74456oQdSHs
        R+9XuBXekmfdFsgndNZHjBhhrfRp/saIE2oxpH8E0SvBsY31+hJT0DKpT+gIW+IWuC94BHPOOWfq27dv
        7dZ/e31g6B5cGqqQiCpZU4Y5weJedtllJkRE+swzz6RWrVrZCT5uTaqRdffww5i80MnI0nMW9clPPvnk
        nPXW+RI4ZC24EkLQ8mnIogsFKN5+++20ww47pOWWW870hWH0eqQX5aqqKhtSU1SRWohN0mUEHeUffvjh
        tkxGET9nhhlmsB5paeXjM6U+tq4fJHcE356wJKlup512sh60qLsifH8rShwxVeYE+nojZITOl99DAsAI
        yqMgo4lLTdRF3gEoIeA1IHT6xBfmuiBIBM5Ym4RmqExFn+PE0hdffHHrz5C4t5AVxn3h5kpNcmcQ9Trr
        rJM6d+5sw44jfK7JflwgHecTS1CZIHIJHQNI5ASLjkaIvDFlv/S33nqr6fK0006r3TKpBwiEjqYw0jPO
        OKMZbFHVo0ePtOGGG6YBAwbYBv8JwIrziSAD+cgjj9Ru/TcF+gwlkEJZpkifG5GqiMOTYXjggQfSdddd
        l2666aZ0++23W7yTqWfPnjFV+ETwA22gk44dO6Z27dqZnjwyjmjvyCOPNANKhBBDS2xd1h53mageCYEI
        jKgiFIMg6bfw0ksvzbWuR9gUz2PN2d+hQwcLOw4dOjR3U6F15lh7MrQInFwx191uu+3Mwq+55prWZzn/
        DOPus4/lmCp3ItxMec16661nE343+TsMLqJGU8yVt8PTwOK3b99+svpOlODvs88+plfi7P5LUHXllVda
        qiKUSMhGjj2x84EDB1opFOFFrPDNN9+cG0ZF9Qr4EVxQ/hZQUYvU1rt379S/f//01FNPpSeeeMK2Eexn
        W79+/Ww5pphwmZmjE+Ya/xW8UUWbaLRNmzbmn2sbcA5NL5daailzWXxpPuTCiz6WrYvLjcHvkajrg/06
        zy+DP88nCFCmJKbKnJTfU4YT3SicqKop7Hv22WfTCSecYAESxoqVS3zNNdfYqINdunSxfn+ouqKml94N
        z9VexMeRdRYSqM804vCTijjeHwv6UezzQucf4jOjf4D9yiEHlY10Iu3kA63gEVCYSUVA3BLc6HPPPddi
        5oSt8fGHDBmS89Wz2szVdQEdxDZfHVJww2zwPruuxKHUSoZW+LCiv1dMlTtJkCz7L78MMAnBG0W5KvkS
        hdditq5UznUJgpZMCD2oCELoQQWQ0v8BnEhmhIyd414AAAAASUVORK5CYII=
</value>
  </data>
</root>