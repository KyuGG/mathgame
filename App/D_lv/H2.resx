<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAwBQTFRFAAAAAQEBAgICAwMDBAQEBQUFBgYGBwcHCAgICQkJ
        CgoKCwsLDAwMDQ0NDg4ODw8PEBAQEREREhISExMTFBQUFRUVFhYWFxcXGBgYGRkZGhoaGxsbHBwcHR0d
        Hh4eHx8fICAgISEhIiIiIyMjJCQkJSUlJiYmJycnKCgoKSkpKioqKysrLCwsLS0tLi4uLy8vMDAwMTEx
        MjIyMzMzNDQ0NTU1NjY2Nzc3ODg4OTk5Ojo6Ozs7PDw8PT09Pj4+Pz8/QEBAQUFBQkJCQ0NDRERERUVF
        RkZGR0dHSEhISUlJSkpKS0tLTExMTU1NTk5OT09PUFBQUVFRUlJSU1NTVFRUVVVVVlZWV1dXWFhYWVlZ
        WlpaW1tbXFxcXV1dXl5eX19fYGBgYWFhYmJiY2NjZGRkZWVlZmZmZ2dnaGhoaWlpampqa2trbGxsbW1t
        bm5ub29vcHBwcXFxcnJyc3NzdHR0dXV1dnZ2d3d3eHh4eXl5enp6e3t7fHx8fX19fn5+f39/gICAgYGB
        goKCg4ODhISEhYWFhoaGh4eHiIiIiYmJioqKi4uLjIyMjY2Njo6Oj4+PkJCQkZGRkpKSk5OTlJSUlZWV
        lpaWl5eXmJiYmZmZmpqam5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSkpaWlpqamp6enqKioqamp
        qqqqq6urrKysra2trq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4ubm5urq6u7u7vLy8vb29
        vr6+v7+/wMDAwcHBwsLCw8PDxMTExcXFxsbGx8fHyMjIycnJysrKy8vLzMzMzc3Nzs7Oz8/P0NDQ0dHR
        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
</value>
  </data>
</root>